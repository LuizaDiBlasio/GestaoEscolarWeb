// <auto-generated />
using System;
using GestaoEscolarWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoEscolarWeb.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseSubject", b =>
                {
                    b.Property<int>("CourseSubjectsId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectCoursesId")
                        .HasColumnType("int");

                    b.HasKey("CourseSubjectsId", "SubjectCoursesId");

                    b.HasIndex("SubjectCoursesId");

                    b.ToTable("CourseSubject");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AlertTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserAuditId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserAuditId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbscenceRecord")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserAuditId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserAuditId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.SchoolClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolYear")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserAuditId");

                    b.ToTable("SchoolClasses");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserStudentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolClassId");

                    b.HasIndex("UserAuditId");

                    b.HasIndex("UserStudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAuditId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserAuditId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.SystemData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AbsenceLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SystemData");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseSubject", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.Subject", null)
                        .WithMany()
                        .HasForeignKey("CourseSubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoEscolarWeb.Data.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("SubjectCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Alert", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.Navigation("UserAudit");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Course", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.Navigation("UserAudit");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Enrollment", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoEscolarWeb.Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("UserAudit");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Evaluation", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.Student", "Student")
                        .WithMany("Evaluations")
                        .HasForeignKey("StudentId");

                    b.HasOne("GestaoEscolarWeb.Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("UserAudit");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.SchoolClass", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.Course", null)
                        .WithMany("SchoolClasses")
                        .HasForeignKey("CourseId");

                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.Navigation("UserAudit");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Student", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.SchoolClass", "SchoolClass")
                        .WithMany("Students")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserStudent")
                        .WithMany()
                        .HasForeignKey("UserStudentId");

                    b.Navigation("SchoolClass");

                    b.Navigation("UserAudit");

                    b.Navigation("UserStudent");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Subject", b =>
                {
                    b.HasOne("GestaoEscolarWeb.Data.Entities.User", "UserAudit")
                        .WithMany()
                        .HasForeignKey("UserAuditId");

                    b.Navigation("UserAudit");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Course", b =>
                {
                    b.Navigation("SchoolClasses");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.SchoolClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("GestaoEscolarWeb.Data.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Evaluations");
                });
#pragma warning restore 612, 618
        }
    }
}
