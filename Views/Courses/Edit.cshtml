@model GestaoEscolarWeb.Models.CourseViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit course</h2>

<h4>Course</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <label asp-for="SelectedSubjectIds" class="control-label"></label>
                <div class="border p-3 rounded" style="max-height: 200px; overflow-y: auto;">
                    @if (Model.SubjectsToSelect != null && Model.SubjectsToSelect.Any())
                    {
                        @foreach (var subjectItem in Model.SubjectsToSelect) // Iterar a SelectListItem
                        {
                            <div class="form-check">
                                <input type="checkbox"
                                       name="SelectedSubjectIds"
                                       value="@subjectItem.Value" @*Id da subject*@
                                       id="subject_@subjectItem.Value" @*Id da subject na checklist*@
                                       class="form-check-input"

                                @*Marcar check ou vazio na checkbox se alguma subject foi selecionada ou não*@
                                @(Model.SelectedSubjectIds != null && Model.SelectedSubjectIds.Contains(int.Parse(subjectItem.Value)) ? "checked" : "") />
                                <label class="form-check-label" for="subject_@subjectItem.Value">
                                    @subjectItem.Text
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No subjects available to select.</p>
                    }
                </div>
                <span asp-validation-for="SelectedSubjectIds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <div>
                    <input type="text" id="startDateInput" asp-for="StartDate" class="form-control" />
                </div>
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <div>
                    <input type="text" id="endDateInput" asp-for="EndDate" class="form-control" />
                </div>
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            // Inicializa o DatePicker para StartDate
            var startDatePicker = new ej.calendars.DatePicker({
                format: 'MM/dd/yyyy',
                placeholder: 'Select a date'
            });
            startDatePicker.appendTo('#startDateInput'); //ligação ao elemento de StartDate

            // Inicializa o DatePicker para EndDate
            var endDatePicker = new ej.calendars.DatePicker({
                format: 'MM/dd/yyyy',
                placeholder: 'Select a date'
            });
            endDatePicker.appendTo('#endDateInput'); //ligação ao elemento de EndDate
        });
    </script>
}
